- разобраться с аккордеонами
- вложенные маркированные и нумерованные списки
- видео в контентной области
- миксины заголовков
- вьюпорт в шапке

Сетка:

//////////////////////////////////////////////////
// CONFIG
//////////////////////////////////////////////////
$enable-mq: true;
$enable-mq-device: false;

//////////////////////////////////////////////////
// VARIABLES
//////////////////////////////////////////////////
// Responsive
$mq-breakpoints: (
  'sm': 767px,
  'md': 768px
);

$mq-container-widths: (
  'sm': 100%,
  'md': 1440px
);

$mq-container-indents: (
  'sm': 1rem,
  'md': 2rem
);

$mq-grid-gutters: (
  'sm': 1rem,
  'md': 2rem
);

// Not responsive
$container-centered: true;

$container-width: 1440px;
$container-indent: 2rem;

$grid-gutter: 2rem;

//////////////////////////////////////////////////
// FUNCTIONS
//////////////////////////////////////////////////
@function half($value) {
  @return $value / 2;
}

//////////////////////////////////////////////////
// MIXINS
//////////////////////////////////////////////////
@mixin mq($mq-breakpoint) {
  @if $enable-mq == true {
    @if map-has-key($mq-breakpoints, $mq-breakpoint) {
      $mq-device: '';
      @if $enable-mq-device == true {
        $mq-device: '-device';
      }
      
      $mq-range: 'min';
      @if $mq-breakpoint == nth(map-keys($mq-breakpoints), 1) {
        $mq-range: 'max';
      }
      
      @media all and (#{$mq-range}#{$mq-device}-width: map-get($mq-breakpoints, $mq-breakpoint)) {
        @content;
      }
    } @else {
      
    }
  }
}

@mixin container($centered) {
  @if $centered == true {
    margin: {
      right: auto;
      left: auto;
    };
  }

  @if $enable-mq == true {
    @each $mq-container-width in $mq-container-widths {
      $mq: nth($mq-container-width, 1);
      $container-width: nth($mq-container-width, 2);

      @include mq($mq) {
        max-width: $container-width;
      }
    }
    
    @each $mq-container-indent in $mq-container-indents {
      $mq: nth($mq-container-indent, 1);
      $container-indent: nth($mq-container-indent, 2);

      @include mq($mq) {
        padding: {
          right: $container-indent;
          left:  $container-indent;
        };
      }
    }
  } @else {
    max-width: $container-width;
    
    padding: {
      right: $container-indent;
      left: $container-indent;
    };
  }
}

@mixin grid($main-axis: x, $justify-content: null, $align-items: null, $align-content: null) {
  display: flex;
  justify-content: $justify-content;
  align-items: $align-items;

  @if $main-axis == x {
    flex-wrap: wrap;
    align-content: $align-content;
  }
  
  @if $main-axis == y {
    flex-direction: column;
  }

  @if $enable-mq == true {
    @each $mq-grid-gutter in $mq-grid-gutters {
      $mq: nth($mq-grid-gutter, 1);
      $grid-gutter: nth($mq-grid-gutter, 2);

      @include mq($mq) {
        margin: {
          right: half(-$grid-gutter);
          left:  half(-$grid-gutter);
        };
      }
    }
  } @else {
    margin: {
      right: half(-$grid-gutter);
      left:  half(-$grid-gutter);
    };
  }
}

@mixin grid-col {
  @if $enable-mq == true {
    @each $mq-grid-gutter in $mq-grid-gutters {
      $mq: nth($mq-grid-gutter, 1);
      $grid-gutter: nth($mq-grid-gutter, 2);

      @include mq($mq) {
        padding: {
          right: half($grid-gutter);
          left:  half($grid-gutter);
        };
      }
    }
  } @else {
    padding: {
      right: half($grid-gutter);
      left:  half($grid-gutter);
    };
  }
}

@mixin grid-cols($cols-count, $cols-total) {
  width: $cols-count / $cols-total * 100%;
}