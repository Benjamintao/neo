@charset "UTF-8";

// Media queries
@mixin mq($mq-breakpoint) {
    @if $enable-mq == true {
        @if map-has-key($mq-breakpoints, $mq-breakpoint) {
            $mq-device: '';
            @if $enable-mq-device == true {
                $mq-device: '-device';
            }

            $mq-range: 'min';
            @if $mq-breakpoint == nth(map-keys($mq-breakpoints), 1) {
                $mq-range: 'max';
            }

            @media all and (#{$mq-range}#{$mq-device}-width: map-get($mq-breakpoints, $mq-breakpoint)) {
                @content;
            }
        }
    }
}

// Container
@mixin container {
    margin: {
        right: auto;
        left: auto;
    };

    @if $enable-mq == true {
        @each $mq-container-width in $mq-container-widths {
            $mq: nth($mq-container-width, 1);
            $container-width: nth($mq-container-width, 2);

            @include mq($mq) {
                max-width: $container-width;
            }
        }

        @each $mq-container-indent in $mq-container-indents {
            $mq: nth($mq-container-indent, 1);
            $container-indent: nth($mq-container-indent, 2);

            @include mq($mq) {
                padding: {
                    right: $container-indent;
                    left:  $container-indent;
                };
            }
        }
    } @else {
        max-width: $container-width;

        padding: {
            right: $container-indent;
            left: $container-indent;
        };
    }
}

// Grid
@mixin grid($main-axis: x, $justify-content: flex-start, $align-items: flex-start) {
    display: flex;
    justify-content: $justify-content;
    align-items: $align-items;

    @if $main-axis == x {
        flex-wrap: wrap;
        align-content: flex-start;
    }

    @if $main-axis == y {
        flex-direction: column;
    }

    @if $enable-mq == true {
        @each $mq-grid-gutter in $mq-grid-gutters {
            $mq: nth($mq-grid-gutter, 1);
            $gutter: -#{nth($mq-grid-gutter, 2) / 2};

            @include mq($mq) {
                margin: {
                    right: $gutter;
                    left:  $gutter;
                };
            }
        }
    } @else {
        $gutter: -$grid-gutter / 2;

        margin: {
            right: $gutter;
            left:  $gutter;
        };
    }
}

@mixin grid-col {
    flex: 1 1 auto;

    @if $enable-mq == true {
        @each $mq-grid-gutter in $mq-grid-gutters {
            $mq: nth($mq-grid-gutter, 1);
            $gutter: nth($mq-grid-gutter, 2) / 2;

            @include mq($mq) {
                padding: {
                    right: $gutter;
                    left:  $gutter;
                };
            }
        }
    } @else {
        $gutter: $grid-gutter / 2;

        padding: {
            right: $gutter;
            left:  $gutter;
        };
    }
}

@mixin grid-col-size($size) {
    flex: 0 0 $size * 100%;
}

// Ellipsis
@mixin ellipsis($max-width: 100%, $display: inline-flex) {
    display: $display;
    max-width: $max-width;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
}

// Font
@mixin font($font-size, $line-height) {
    font-size: $font-size;
    line-height: strip-units($line-height) / strip-units($font-size);
}

// Size
@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
}

// Text
@mixin text-large {
    @include font(2rem, 2.5rem);
}

@mixin text-base {
    @include font(1.5rem, 2rem);
}

@mixin text-small {
    @include font(1rem, 1.5rem);
}

// Headings
@mixin h1($font-weight: 700) {
    @include font(6rem, 6rem);
    font-weight: $font-weight;
}

@mixin h2($font-weight: 700) {
    @include font(5rem, 5rem);
    font-weight: $font-weight;
}

@mixin h3($font-weight: 700) {
    @include font(4rem, 4rem);
    font-weight: $font-weight;
}

@mixin h4($font-weight: 700) {
    @include font(3rem, 3rem);
    font-weight: $font-weight;
}

@mixin h5($font-weight: 700) {
    @include text-large;
    font-weight: $font-weight;
}

@mixin h6($font-weight: 700) {
    @include text-base;
    font-weight: $font-weight;
}
